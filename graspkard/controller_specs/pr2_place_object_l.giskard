scope = {
	unitX = vec3(1,0,0);
	unitY = vec3(0,1,0);
	unitZ = vec3(0,0,1);

	j_torso_lift    = inputJoint("torso_lift_joint");

	j_shoulder_pan  = inputJoint("l_shoulder_pan_joint");
	j_shoulder_lift = inputJoint("l_shoulder_lift_joint");
	j_upper_arm_roll= inputJoint("l_upper_arm_roll_joint");
	j_elbow_flex    = inputJoint("l_elbow_flex_joint");
	j_forearm_roll  = inputJoint("l_forearm_roll_joint");
	j_wrist_flex    = inputJoint("l_wrist_flex_joint");
	j_wrist_roll    = inputJoint("l_wrist_roll_joint");
	j_gripper       = inputJoint("l_gripper_joint");
	
	object_in_gripper = inputFrame("object_in_gripper");

	goal = inputFrame("goal_position");
	goal_position = goal.pos;

	object_height = inputScalar("object_height");

	torso_lift       = frame(rotation(unitX, 0), vec3(-0.05, 0, 0.739675 + j_torso_lift));
	shoulder_pan  = frame(rotation(unitZ, j_shoulder_pan),   vec3(0, 0.188, 0));
	shoulder_lift = frame(rotation(unitY, j_shoulder_lift),  vec3(0.1, 0, 0));
	upper_arm_roll= frame(rotation(unitX, j_upper_arm_roll), vec3(0, 0, 0));
	elbow_flex    = frame(rotation(unitY, j_elbow_flex),     vec3(0.4, 0, 0));
	forearm_roll  = frame(rotation(unitX, j_forearm_roll),   vec3(0, 0, 0));
	wrist_flex    = frame(rotation(unitY, j_wrist_flex),     vec3(0.321, 0, 0));
	wrist_roll    = frame(rotation(unitX, j_wrist_roll),     vec3(0, 0, 0));

	elbow = torso_lift * shoulder_pan * shoulder_lift * upper_arm_roll * elbow_flex ;
	wrist = elbow * forearm_roll * wrist_flex * wrist_roll;
	object_in_world = wrist * object_in_gripper;


	#rotational constraints
	rot_z_error = unitZ * (object_in_world.rot * unitZ);
	rot_z_error_ctrl = 1 - rot_z_error;

	# positional constraints
	vec_object_to_goal =  goal_position - object_in_world.pos;
	horizontal_error = norm(vec3(vec_object_to_goal.x, vec_object_to_goal.y, 0));
	horizontal_error_ctrl = -min(0.1, max(-0.1, horizontal_error));

	vertical_error = vec_object_to_goal.z;
	target_height = min(goal_position.z + 10 * horizontal_error, goal_position.z + 0.2);
	vertical_error_2 = min(object_in_world.pos.z - target_height, max((0.08 - (horizontal_error + rot_z_error_ctrl)) * 30, 0)); #+ max((0.05 - (horizontal_error)) * 30, 0);
	vertical_error_2_ctrl = -min(0.1, max(-0.1, vertical_error_2));

	#vertical_error_speed = max((0.02 - (horizontal_error + rot_z_error_ctrl)) * 30, 0);
	#vertical_error_ctrl = vertical_error * vertical_error_speed;


	# Limits, weights and the like
	negVelLimitTorso = -0.02;
	posVelLimitTorso =  0.02;
	negVelLimitArm   = -0.6;
	posVelLimitArm   =  0.6;

	weightGripper = 0.001;
	weightArm   = weightGripper * 10;
	weightTorso = weightArm * 10;

	weightPositionGoal = 1;
	weightRotationGoal = 4;

	feedback = vertical_error + horizontal_error

}

controllableConstraints = {
	controllableConstraint(negVelLimitTorso, posVelLimitTorso, weightTorso, "torso_lift_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "l_shoulder_pan_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "l_shoulder_lift_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "l_upper_arm_roll_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "l_elbow_flex_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "l_forearm_roll_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "l_wrist_flex_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "l_wrist_roll_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "l_gripper_joint")
}

softConstraints = {
	softConstraint(horizontal_error_ctrl, horizontal_error_ctrl, weightPositionGoal, horizontal_error, "horizontal_error_ctrl");
	softConstraint(vertical_error_2_ctrl, vertical_error_2_ctrl, weightPositionGoal, vertical_error_2, "vertical_error_ctrl");
	softConstraint(rot_z_error_ctrl, rot_z_error_ctrl, weightRotationGoal, rot_z_error, "rot_z_error_ctrl")

}	

hardConstraints = {
	hardConstraint(0.0115 - j_torso_lift, 0.325 - j_torso_lift, j_torso_lift);
	
	
	hardConstraint(-0.5646 - j_shoulder_pan,  2.1353 - j_shoulder_pan,   j_shoulder_pan);
	hardConstraint(-0.3536 - j_shoulder_lift, 1.2963 - j_shoulder_lift,  j_shoulder_lift);
	hardConstraint(-0.65   - j_upper_arm_roll,  3.75 - j_upper_arm_roll, j_upper_arm_roll);
	hardConstraint(-2.1213 - j_elbow_flex,     -0.15 - j_elbow_flex,     j_elbow_flex);
	hardConstraint(-2.0    - j_wrist_flex,      -0.1 - j_wrist_flex,     j_wrist_flex)
}