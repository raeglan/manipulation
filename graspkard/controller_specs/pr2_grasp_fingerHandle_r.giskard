scope = {
	unitX = vec3(1,0,0);
	unitY = vec3(0,1,0);
	unitZ = vec3(0,0,1);


	j_shoulder_pan  = inputJoint("r_shoulder_pan_joint");
	j_shoulder_lift = inputJoint("r_shoulder_lift_joint");
	j_upper_arm_roll= inputJoint("r_upper_arm_roll_joint");
	j_elbow_flex    = inputJoint("r_elbow_flex_joint");
	j_forearm_roll  = inputJoint("r_forearm_roll_joint");
	j_wrist_flex    = inputJoint("r_wrist_flex_joint");
	j_wrist_roll    = inputJoint("r_wrist_roll_joint");
	j_gripper       = inputJoint("r_gripper_joint");
	j_torso_lift    = inputJoint("torso_lift_joint");

	handle = inputFrame("handle_frame");
	handle_pos = handle.pos;
	handle_rot = handle.rot;

	handle_depth = inputScalar("handle_depth");
	handle_width = inputScalar("handle_width");

	torso_lift       = frame(rotation(unitX, 0), vec3(-0.05, 0, 0.739675 + j_torso_lift));
	shoulder_pan  = frame(rotation(unitZ, j_shoulder_pan),   vec3(0, -0.188, 0));
	shoulder_lift = frame(rotation(unitY, j_shoulder_lift),  vec3(0.1, 0, 0));
	upper_arm_roll= frame(rotation(unitX, j_upper_arm_roll), vec3(0, 0, 0));
	elbow_flex    = frame(rotation(unitY, j_elbow_flex),     vec3(0.4, 0, 0));
	forearm_roll  = frame(rotation(unitX, j_forearm_roll),   vec3(0, 0, 0));
	wrist_flex    = frame(rotation(unitY, j_wrist_flex),     vec3(0.321, 0, 0));
	wrist_roll    = frame(rotation(unitX, j_wrist_roll),     vec3(0, 0, 0));

	elbow = torso_lift * shoulder_pan * shoulder_lift * upper_arm_roll * elbow_flex ;
	wrist = elbow * forearm_roll * wrist_flex * wrist_roll;
	gripper = wrist * frame(rotation(0,0,0,1), vec3(0.13,0,0));
	gripper_pos = gripper.pos;

	# Keep the elbow afloat
	elbow_pos = elbow.pos;
	elbow_low = 1 - elbow_pos.z;


	grasp_err = handle_width - j_gripper + 0.05;

	finger_length = 0.06;
	g_rot = gripper.rot;

	g_x = g_rot * unitX;
	g_z = g_rot * unitZ;

	h_x = handle_rot * unitX;
	h_y = handle_rot * unitY;
	h_z = handle_rot * unitZ;

	g2h = gripper_pos - handle_pos;
	gh_xd = g2h * h_x;
	gh_yd = g2h * h_y;
	gh_zd = g2h * h_z;


	ang_scale = 2;

	tilt_ctrl = h_x * g_x;
	tilt_err = (1 - tilt_ctrl) * ang_scale;
	yaw_roll_ctrl = abs(h_z * g_z);
	yaw_roll_err = (1 - yaw_roll_ctrl) * ang_scale;

	rot_err = tilt_err + yaw_roll_err;
	pos_err = abs(gh_yd) + abs(gh_zd);
	pre_err = 2 * pos_err + rot_err;
	pos_ctrl = max(-0.1, -pos_err);

	paramA = min(1, pre_err / max(abs(gh_xd), 0.06) - 0.1);
	paramB = 1 - paramA;

	pre_pos = -0.5 * handle_depth - 0.05;
	goal_pos = 0.5 * handle_depth;

	x_low_err = min((paramB * goal_pos - paramA) - finger_length - gh_xd, 0.04);
	x_hig_err = min((paramB * goal_pos + paramA * pre_pos) - finger_length - gh_xd, 0.04);

	# Limits, weights and the like
	negVelLimitTorso = -0.02;
	posVelLimitTorso =  0.02;
	negVelLimitArm   = -0.6;
	posVelLimitArm   =  0.6;

	weightGripper = 0.001;
	weightArm   = weightGripper * 10;
	weightTorso = weightArm * 10;

	weightPositionGoal = 1;
	weightRotationGoal = 2.6;

	feedback = pre_err + 0.5 * handle_depth - gh_xd;

	# Visualization
	VIS__x_plane_dist = gh_xd;
	VIS__y_plane_dist = gh_yd;
	VIS__z_plane_dist = gh_zd;

	VIS__hxg__gripper_pos = h_x * -gh_xd;
	VIS__hyg__gripper_pos = h_y * -gh_yd;
	VIS__hzg__gripper_pos = h_z * -gh_zd;

	VIS__err__gripper_pos = unitZ * pre_err;

	VIS__grasp_dir__handle_pos = h_x
}

controllableConstraints = {
	#controllableConstraint(negVelLimitTorso, posVelLimitTorso, weightTorso, "torso_lift_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "r_shoulder_pan_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "r_shoulder_lift_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "r_upper_arm_roll_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "r_elbow_flex_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "r_forearm_roll_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "r_wrist_flex_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "r_wrist_roll_joint");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, "r_gripper_joint")
}

softConstraints = {
	softConstraint(grasp_err, grasp_err, 10, j_gripper, "Gripper opening");

	softConstraint(x_low_err, x_hig_err, weightPositionGoal, gh_xd, "Depth align");
	softConstraint(-1, pos_ctrl, weightPositionGoal, pos_err, "X-Axis align");

	#softConstraint(elbow_low, 100, weightPositionGoal, elbow_pos.z, "Elbow");
	softConstraint(tilt_err, tilt_err, weightRotationGoal, tilt_ctrl, "Tilt align");
	softConstraint(yaw_roll_err, yaw_roll_err, weightRotationGoal, yaw_roll_ctrl, "Yaw Roll align")
}	

hardConstraints = {
	hardConstraint(0.0115 - j_torso_lift, 0.325 - j_torso_lift, j_torso_lift);
	
	# # Right arm constraints
	hardConstraint(-2.1353 - j_shoulder_pan,  0.5646 - j_shoulder_pan,   j_shoulder_pan);
	hardConstraint(-0.3536 - j_shoulder_lift, 1.2963 - j_shoulder_lift,  j_shoulder_lift);
	hardConstraint(-3.75   - j_upper_arm_roll,  0.65 - j_upper_arm_roll, j_upper_arm_roll);
	hardConstraint(-2.1213 - j_elbow_flex,     -0.15 - j_elbow_flex,     j_elbow_flex);
	hardConstraint(-2.0    - j_wrist_flex,      -0.1 - j_wrist_flex,     j_wrist_flex)
}